server.port=9095
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/ms_orders
spring.datasource.username=root
spring.datasource.password=mohit
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.output.ansi.enabled=always

#Eureka Properties
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
#Changed the Above URL after adding the security in eureka server using username and password
eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka
spring.application.name=order-service
#eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=true

#Enable Circuitbreaker Endpoints in Actuator
management.health.circuitbreakers.enabled=true
#Actuator will expose all the end points, bydefult it only exposes the health matrix endpoints
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#Resilience4j Circuitbreaker Properties
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

#Resilience4j Timeout Properties
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

#Resilienc4j Retry Properties
resilience4j.retry.instances.inventory.max-attempts=2
resilience4j.retry.instances.inventory.wait-duration=5s

#Zipkin and Sleuth - Distributed Tracing Config
spring.zipkin.baseUrl=http://localhost:9411
#1.0 means, all of our request 100% will be sent ot our zipkin
spring.sleuth.sampler.probability=1.0

#KAFKA Properties
spring.kafka.bootstrapServers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.ecommproject.orderservice.event.OrderPlacedEvent


#Okta config for Order_service - Commented as not using
#okta.oauth2.issuer=https://dev-41787404.okta.com/oauth2/default
#okta.oauth2.audience=api://default
#spring.security.oauth2.resourceserver.jwt.issuer-uri=https://dev-41787404.okta.com/oauth2/default
#spring.security.oauth2.client.registration.my-internal-client.provider=okta
#spring.security.oauth2.client.registration.my-internal-client.authorization-grant-type=client_credentials
#spring.security.oauth2.client.registration.my-internal-client.scope=internal
#spring.security.oauth2.client.registration.my-internal-client.client-id=0oa95w2th5LowpJaX5d7
#spring.security.oauth2.client.registration.my-internal-client.client-secret=octOZxswk_FMoFmsAzsUSj1pVLGnQP8SxgOE7lKR
#spring.security.oauth2.client.provider.okta.issuer-uri=https://dev-41787404.okta.com/oauth2/default